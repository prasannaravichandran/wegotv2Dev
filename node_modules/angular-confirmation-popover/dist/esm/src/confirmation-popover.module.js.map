{"version":3,"sources":["../../../src/confirmation-popover.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA+B,cAAA,EAAe,MAAO,eAAA,CAAgB;AAC9E,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,WAAA,EAAY,MAAO,aAAA,CAAc;AAC1C,OAAO,EAAE,4BAAA,EAA6B,MAAO,kCAAA,CAAmC;AAChF,OAAO,EAAE,kCAAA,EAAmC,MAAO,yCAAA,CAA0C;AAC7F,OAAO,EAAE,cAAA,EAAe,MAAO,mBAAA,CAAoB;AACnD,OAAO,EACL,0BAA0B,EAE3B,MAAM,yCAAA,CAA0C;AAEjD,MAAM,CAAC,IAAM,YAAA,GAAuC,IAAI,cAAA,CACtD,mCAAmC,CACpC,CAAC;AAEF,MAAM,yBACJ,WAAa;IAEb,IAAM,OAAA,GAAsC,IAAI,0BAAA,EAA2B,CAAE;IAC7E,MAAM,CAAC,MAAC,CAAM,OAAC,EAAQ,WAAA,CAAY,CAAC;IACpC,MAAM,CAAC,OAAA,CAAQ;AACjB,CAAC;AAGD;IAAA;IAmCA,CAAC;IAlCQ,iCAAO,GAAd,UACE,OAAiD;QAAjD,wBAAA,EAAA,YAAiD;QAEjD,MAAM,CAAC;YACL,QAAQ,EAAE,yBAAyB;YACnC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,OAAO;iBAClB;gBACD;oBACE,OAAO,EAAE,0BAA0B;oBACnC,UAAU,EAAE,cAAc;oBAC1B,IAAI,EAAE,CAAC,YAAY,CAAC;iBACrB;gBACD,WAAW;aACZ;SACF,CAAC;IACJ,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,YAAY,EAAE;wBACZ,4BAA4B;wBAC5B,kCAAkC;wBAClC,cAAc;qBACf;oBACD,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,4BAA4B,EAAE,cAAc,CAAC;oBACvD,eAAe,EAAE,CAAC,kCAAkC,CAAC;iBACtD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,gCAAC;CAnCD,AAmCC,IAAA;SAnCY,yBAAyB","file":"confirmation-popover.module.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport { ConfirmationPopoverDirective } from './confirmation-popover.directive';\nimport { ConfirmationPopoverWindowComponent } from './confirmation-popover-window.component';\nimport { FocusDirective } from './focus.directive';\nimport {\n  ConfirmationPopoverOptions,\n  ConfirmationPopoverOptionsInterface\n} from './confirmation-popover-options.provider';\n\nexport const USER_OPTIONS: InjectionToken<string> = new InjectionToken(\n  'confirmation popover user options'\n);\n\nexport function optionsFactory(\n  userOptions: ConfirmationPopoverOptions\n): ConfirmationPopoverOptions {\n  const options: ConfirmationPopoverOptions = new ConfirmationPopoverOptions();\n  Object.assign(options, userOptions);\n  return options;\n}\n\n\nexport class ConfirmationPopoverModule {\n  static forRoot(\n    options: ConfirmationPopoverOptionsInterface = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: ConfirmationPopoverModule,\n      providers: [\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: ConfirmationPopoverOptions,\n          useFactory: optionsFactory,\n          deps: [USER_OPTIONS]\n        },\n        Positioning\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    ConfirmationPopoverDirective,\n    ConfirmationPopoverWindowComponent,\n    FocusDirective\n  ],\n  imports: [CommonModule],\n  exports: [ConfirmationPopoverDirective, FocusDirective],\n  entryComponents: [ConfirmationPopoverWindowComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}