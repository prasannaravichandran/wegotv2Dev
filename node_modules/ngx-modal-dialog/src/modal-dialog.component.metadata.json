[{"__symbolic":"module","version":3,"metadata":{"ModalDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"modal-dialog","styles":["\n      @-moz-keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n      @-webkit-keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n      @keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n\n      .modal {\n        display: block;\n        top: 50%;\n        left: 50%;\n        right: auto;\n        bottom: auto;\n        backface-visibility: hidden;\n        overflow: visible;\n      }\n      .modal-content {\n        left: -50%;\n        transform: translateY(-50%);\n      }\n      .modal-content.shake {\n        backface-visibility: hidden;\n        -webkit-animation-duration: 0.5s;\n        -moz-animation-duration: 0.5s;\n        animation-duration: 0.5s;\n        -webkit-animation-fill-mode: both;\n        -moz-animation-fill-mode: both;\n        animation-fill-mode: both;\n        -webkit-animation-iteration-count: infinite;\n        -moz-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n        -webkit-animation-name: shake;\n        -moz-animation-name: shake;\n        animation-name: shake;\n      }\n  "],"template":"\n    <div [ngClass]=\"settings.overlayClass\" (click)=\"(!actionButtons || !actionButtons.length) && close()\"></div>\n    <div [ngClass]=\"settings.modalClass\">\n      <div [ngClass]=\"[ showAlert ? settings.alertClass : '', settings.contentClass]\">\n        <div [ngClass]=\"settings.headerClass\">\n          <h4 [ngClass]=\"settings.headerTitleClass\">{{title}}</h4>\n          <button (click)=\"close()\" *ngIf=\"!actionButtons || !actionButtons.length\" type=\"button\"\n            [title]=\"settings.closeButtonTitle\"\n            [ngClass]=\"settings.closeButtonClass\">\n          </button>\n        </div>\n        <div [ngClass]=\"settings.bodyClass\">\n          <i #modalDialogBody></i>\n        </div>\n        <div [ngClass]=\"settings.footerClass\" *ngIf=\"actionButtons && actionButtons.length\">\n          <button *ngFor=\"let button of actionButtons\" (click)=\"doAction(button.onAction)\"\n            [ngClass]=\"button.buttonClass || settings.buttonClass\">{{button.text}}</button>\n        </div>\n      </div>\n    </div>\n    "}]}],"members":{"dynamicComponentTarget":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["modalDialogBody",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef"}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"dialogInit":[{"__symbolic":"method"}],"doAction":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"_setOptions":[{"__symbolic":"method"}],"_closeIfSuccessful":[{"__symbolic":"method"}],"_finalizeAndDestroy":[{"__symbolic":"method"}],"_triggerAlert":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ModalDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"modal-dialog","styles":["\n      @-moz-keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n      @-webkit-keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n      @keyframes shake {\n        from, to                { transform: translate3d(0, -50%, 0); }\n        10%, 30%, 50%, 70%, 90% { transform: translate3d(-2rem, -50%, 0); }\n        20%, 40%, 60%, 80%      { transform: translate3d(2rem, -50%, 0); }\n      }\n\n      .modal {\n        display: block;\n        top: 50%;\n        left: 50%;\n        right: auto;\n        bottom: auto;\n        backface-visibility: hidden;\n        overflow: visible;\n      }\n      .modal-content {\n        left: -50%;\n        transform: translateY(-50%);\n      }\n      .modal-content.shake {\n        backface-visibility: hidden;\n        -webkit-animation-duration: 0.5s;\n        -moz-animation-duration: 0.5s;\n        animation-duration: 0.5s;\n        -webkit-animation-fill-mode: both;\n        -moz-animation-fill-mode: both;\n        animation-fill-mode: both;\n        -webkit-animation-iteration-count: infinite;\n        -moz-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n        -webkit-animation-name: shake;\n        -moz-animation-name: shake;\n        animation-name: shake;\n      }\n  "],"template":"\n    <div [ngClass]=\"settings.overlayClass\" (click)=\"(!actionButtons || !actionButtons.length) && close()\"></div>\n    <div [ngClass]=\"settings.modalClass\">\n      <div [ngClass]=\"[ showAlert ? settings.alertClass : '', settings.contentClass]\">\n        <div [ngClass]=\"settings.headerClass\">\n          <h4 [ngClass]=\"settings.headerTitleClass\">{{title}}</h4>\n          <button (click)=\"close()\" *ngIf=\"!actionButtons || !actionButtons.length\" type=\"button\"\n            [title]=\"settings.closeButtonTitle\"\n            [ngClass]=\"settings.closeButtonClass\">\n          </button>\n        </div>\n        <div [ngClass]=\"settings.bodyClass\">\n          <i #modalDialogBody></i>\n        </div>\n        <div [ngClass]=\"settings.footerClass\" *ngIf=\"actionButtons && actionButtons.length\">\n          <button *ngFor=\"let button of actionButtons\" (click)=\"doAction(button.onAction)\"\n            [ngClass]=\"button.buttonClass || settings.buttonClass\">{{button.text}}</button>\n        </div>\n      </div>\n    </div>\n    "}]}],"members":{"dynamicComponentTarget":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["modalDialogBody",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef"}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"dialogInit":[{"__symbolic":"method"}],"doAction":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"_setOptions":[{"__symbolic":"method"}],"_closeIfSuccessful":[{"__symbolic":"method"}],"_finalizeAndDestroy":[{"__symbolic":"method"}],"_triggerAlert":[{"__symbolic":"method"}]}}}}]